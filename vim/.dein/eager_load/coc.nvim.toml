[[plugins]]
repo = "neoclide/coc.nvim"
merge = 0
rev = "release"
hook_add = '''
  " 環境移行をしやすい様に、インストールしたいextensionsを指定
  let g:coc_global_extensions = [
   \ "coc-json",
   \ "coc-yaml",
   \ "coc-toml",
   \ "coc-emmet",
   \ "coc-html",
   \ "coc-css",
   \ "coc-sh",
   \ "coc-sql",
   \ "coc-vimlsp",
   \ "coc-pyright",
   \ "coc-rust-analyzer",
   \ "coc-solargraph",
   \ "coc-tsserver",
   \ "coc-eslint",
   \ "coc-prettier",
   \ "coc-go",
   \ "coc-docker",
   \ "coc-xml",
   \ "coc-graphql",
  \ ]
  " ポップアップウィンドウのスクロール
  " 第一引数でスクロール方向、第二引数で行数、第二引数がなければページ単位のスクロール
  nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1, 3) : "\<C-f>"
  nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0, 3) : "\<C-b>"
  inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(1, 3)\<cr>" : "\<Right>"
  inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(0, 3)\<cr>" : "\<Left>"
  nmap <silent> cdx :call CocAction("jumpDefinition", "split")<CR>
  nmap <silent> cdv :call CocAction("jumpDefinition", "vsplit")<CR>
  nmap <silent> cdt :call CocAction("jumpDefinition", "tabe")<CR>
  nmap <silent> ctx :call CocAction("jumpTypeDefinition", "split")<CR>
  nmap <silent> ctv :call CocAction("jumpTypeDefinition", "vsplit")<CR>
  nmap <silent> ctt :call CocAction("jumpTypeDefinition", "tabe")<CR>
  nmap <silent> cdec :call CocAction("jumpDeclaration", "vsplit")<CR>
  nmap <silent> cix :call CocAction("jumpImplementation", "split")<CR>
  nmap <silent> civ :call CocAction("jumpImplementation", "vsplit")<CR>
  nmap <silent> cit :call CocAction("jumpImplementation", "tabe")<CR>
  nmap <silent> crx :call CocAction("jumpReferences", "split")<CR>
  nmap <silent> crv :call CocAction("jumpReferences", "vsplit")<CR>
  nmap <silent> crt :call CocAction("jumpReferences", "tabe")<CR>
  nnoremap <silent> K :call <SID>show_documentation()<CR>
  function! s:show_documentation()
    if (index(["vim","help"], &filetype) >= 0)
      execute "h ".expand("<cword>")
    elseif (coc#rpc#ready())
      call CocActionAsync("doHover")
    else
      execute "!" . &keywordprg . " " . expand("<cword>")
    endif
  endfunction
'''
